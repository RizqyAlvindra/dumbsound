name: Testing Github Action

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  install:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install ?
      run: echo "install some packages maybe ??"

  testing:

    runs-on: ubuntu-latest
    needs: [install]

    steps:
    - uses: actions/checkout@v3
    - name: testing 
      id: unit-test
      run: echo "running unit test ?"
  
  build:

    runs-on: ubuntu-latest
    needs: [install, testing]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: echo "docker build --file Dockerfile --tag registry.mejik.id/custom/alvin:testing ."
    - name: login docker registry private
      run: echo "docker login registry.mejik.id -u mejik -p Mejik2169"
    - name: push docker image to registry
      run: echo "docker push registry.mejik.id/custom/alvin:testing"

  release:
    
    runs-on: ubuntu-latest
    needs: [install,testing,build]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    
    steps:
    - uses: actions/checkout@v3  
    - name: Zip repository
      run: zip -r v1.0.${{ github.run_number }}.zip . 
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: v1.0.${{ github.run_number }}.zip
        path: v1.0.${{ github.run_number }}.zip    
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release 1.0.${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./v1.0.${{ github.run_number }}.zip
        asset_name: v1.0.${{ github.run_number }}
        asset_content_type: application/octet-stream
